{"version":3,"sources":["components/SearchForm/index.js","components/SearchResultItem/index.js","components/SearchResults/index.js","redux/types/results.js","utils/urls.js","utils/keys.js","utils/http.js","components/App/index.js","redux/actions/results.js","redux/reducers/results.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["SearchForm","state","inpQuery","selectedSearchEngine","handleSearch","bind","handleSearchEngine","handleChangeQuery","e","this","setState","target","value","props","search","className","onChange","type","defaultValue","onClick","React","Component","SearchResultItem","item","href","link","displayLink","title","snippet","SearchResults","data","response","loading","error","searchEngine","length","map","cacheId","SEARCH_GOOGLE","SEARCH_BING","SEARCH_ALL","SEARCH_GOOGLE_START","SEARCH_GOOGLE_SUCCESS","SEARCH_GOOGLE_FAIL","SEARCH_GOOGLE_FINISH","SEARCH_BING_START","SEARCH_BING_SUCCESS","SEARCH_BING_FAIL","SEARCH_BING_FINISH","SET_SEARCH_ENGINE","URL_GOOGLE_SEARCH","sendQuery","query","a","Promise","resolve","reject","fetch","json","items","id","webPages","name","displayUrl","url","App","googleData","bingData","connect","results","resultsBing","resultsGoogle","dispatch","payload","initialState","combineReducers","action","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.e0c798b3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass SearchForm extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      inpQuery : '',\r\n      selectedSearchEngine: 'all',\r\n    }\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n    this.handleSearchEngine = this.handleSearchEngine.bind(this);\r\n    this.handleChangeQuery = this.handleChangeQuery.bind(this);\r\n  }\r\n\r\n  handleChangeQuery(e) {\r\n    this.setState({inpQuery: e.target.value})\r\n  }\r\n\r\n  handleSearch() {\r\n    const { inpQuery, selectedSearchEngine} = this.state;\r\n    if(inpQuery)\r\n      this.props.search(inpQuery, selectedSearchEngine)\r\n  }\r\n\r\n  handleSearchEngine(e) {\r\n    this.setState({selectedSearchEngine: e.target.value})\r\n  }\r\n  render() {\r\n    const { inpQuery, selectedSearchEngine} = this.state;\r\n    return (\r\n      <div className='search-form'>\r\n        <div className='search-form__inputs'>\r\n          <input\r\n            onChange={this.handleChangeQuery}\r\n            value={inpQuery}\r\n            type='text'\r\n          />\r\n          <select\r\n            defaultValue={selectedSearchEngine}\r\n            onChange={this.handleSearchEngine}\r\n          >\r\n            <option value='all'>All</option>\r\n            <option value='google'>Google</option>\r\n            <option value='bing'>Bing</option>\r\n          </select>\r\n        </div>\r\n        <div className='search-form__action'>\r\n          <button onClick={this.handleSearch}>Search</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default SearchForm","import React from 'react';\r\n\r\nclass SearchResultItem extends React.Component {\r\n  render() {\r\n    const { item } = this.props;\r\n    return (\r\n      <div className='search-results__item'>\r\n        <a target='_blank' href={item.link}>\r\n          <span className='display-link'>{item.displayLink}</span>\r\n          <span className='title-link'>{item.title}</span>\r\n          <p>{item.snippet}</p>\r\n        </a>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchResultItem;","import React from 'react';\r\nimport SearchResultItem from '../SearchResultItem';\r\n\r\nclass SearchResults extends React.Component {\r\n  render() {\r\n    const {\r\n      data: {\r\n        response,\r\n        loading,\r\n        error\r\n      }\r\n    } = this.props;\r\n    \r\n    return (\r\n      <div className='search-results'>\r\n        <h3 className='search-results__title'>{this.props.searchEngine} Results</h3>\r\n        { loading &&\r\n          <div>Loading...</div>\r\n        }\r\n        { !loading && !error && response.length > 0 &&\r\n          response.map(item => <SearchResultItem  key={item.cacheId} item={item}/>)  \r\n        }\r\n        { !loading && !error && response.length == 0 &&\r\n          <div>There's no results.</div>\r\n        }\r\n        { error && \r\n          <div>An error have ocurred.</div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchResults;","const SEARCH_GOOGLE = 'SEARCH_GOOGLE';\r\nconst SEARCH_BING = 'SEARCH_BING';\r\nconst SEARCH_ALL = 'SEARCH_ALL';\r\n\r\nexport const SEARCH_GOOGLE_START = `${SEARCH_GOOGLE}_START`;\r\nexport const SEARCH_GOOGLE_SUCCESS = `${SEARCH_GOOGLE}_SUCCESS`;\r\nexport const SEARCH_GOOGLE_FAIL = `${SEARCH_GOOGLE}_FAIL`;\r\nexport const SEARCH_GOOGLE_FINISH = `${SEARCH_GOOGLE}_FINISH`;\r\n\r\nexport const SEARCH_BING_START = `${SEARCH_BING}_START`;\r\nexport const SEARCH_BING_SUCCESS = `${SEARCH_BING}_SUCCESS`;\r\nexport const SEARCH_BING_FAIL = `${SEARCH_BING}_FAIL`;\r\nexport const SEARCH_BING_FINISH = `${SEARCH_BING}_FINISH`;\r\n\r\nexport const SEARCH_ALL_START = `${SEARCH_ALL}_START`;\r\nexport const SEARCH_ALL_SUCCESS = `${SEARCH_ALL}_SUCCESS`;\r\nexport const SEARCH_ALL_FAIL = `${SEARCH_ALL}_FAIL`;\r\nexport const SEARCH_ALL_FINISH = `${SEARCH_ALL}_FINISH`;\r\n\r\nexport const SET_SEARCH_ENGINE = 'SET_SEARCH_ENGINE'","import { google_key } from './keys';\r\n\r\nexport const URL_GOOGLE_SEARCH = `https://www.googleapis.com/customsearch/v1?key=${google_key}&cx=d4e34c3e52055c77a&q=`\r\nexport const URL_BING_SEARCH = `https://api.bing.microsoft.com/v7.0/search?q=`","export const google_key = 'AIzaSyDKGV7naNqKQvkcbpl6-X4NgRO6eC3caQg';\r\nexport const bing_key = 'b89c6a5ac03843fc9f2e6f7727ace7ea';","import { URL_GOOGLE_SEARCH, URL_BING_SEARCH} from './urls';\r\nimport { bing_key } from '../utils/keys';\r\n\r\nexport const sendQuery = async (searchEngine, query) => {\r\n  return new Promise (async (resolve, reject) => {\r\n    if(searchEngine == 'google') {\r\n      try {\r\n        const response = await fetch(`${URL_GOOGLE_SEARCH}${query}`);\r\n        const data = await response.json();\r\n\r\n        let items = [];\r\n        if(data.items) {\r\n          items = data.items.map(item => ({\r\n            snippet:item.snippet,\r\n            title: item.title,\r\n            displayLink: item.displayLink,\r\n            link: item.link,\r\n            id: item.cacheId,\r\n          }));\r\n        }\r\n        resolve(items);\r\n      }\r\n      catch (error) {\r\n        reject(error)\r\n      }\r\n    }\r\n    else if(searchEngine == 'bing') {\r\n      try {\r\n        const response = await fetch(`${URL_BING_SEARCH}${query}`, {\r\n          'method': 'GET',\r\n          'headers': {\r\n            'Content-Type': 'application/json',\r\n            'Ocp-Apim-Subscription-Key': bing_key\r\n          }});\r\n        const data = await response.json();\r\n        let items = [];\r\n        if(data.webPages) {\r\n          items = data.webPages.value.map(item => ({\r\n            snippet:item.snippet,\r\n            title: item.name,\r\n            displayLink: item.displayUrl,\r\n            link: item.url,\r\n            id: item.id,\r\n          }));\r\n        }\r\n        resolve(items)\r\n      }\r\n      catch (error) {\r\n        reject(error)\r\n      }\r\n    }\r\n  })\r\n}","import React from 'react';\r\nimport SearchForm from '../SearchForm';\r\nimport SearchResults from '../SearchResults';\r\nimport '../../styles/styles.scss';\r\n\r\nimport { search } from '../../redux/actions/results';\r\nimport { connect } from 'react-redux';\r\n\r\nclass App extends React.Component{\r\n  constructor() {\r\n    super();\r\n  }\r\n  search(query, searchEngine) {\r\n    this.props.search(query, searchEngine);\r\n  }\r\n  render () {\r\n    const {\r\n      searchEngine,\r\n      googleData,\r\n      bingData,\r\n      search\r\n    } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <SearchForm search={search}/>\r\n        {\r\n          searchEngine && \r\n          (searchEngine=='google' || searchEngine=='all') &&\r\n          <SearchResults searchEngine={'Google'} data={googleData}/>\r\n        }\r\n        {  \r\n          searchEngine &&\r\n          (searchEngine=='bing' || searchEngine=='all') &&\r\n          <SearchResults searchEngine={'Bing'} data={bingData}/>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    bingData: state.results.resultsBing,\r\n    googleData: state.results.resultsGoogle,\r\n    searchEngine: state.results.searchEngine,\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  search: (query, searchEngine) => dispatch(search(query, searchEngine))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","import {\r\n  SEARCH_GOOGLE_START,\r\n  SEARCH_GOOGLE_SUCCESS,\r\n  SEARCH_GOOGLE_FAIL,\r\n  SEARCH_GOOGLE_FINISH,\r\n  SEARCH_BING_START,\r\n  SEARCH_BING_SUCCESS,\r\n  SEARCH_BING_FAIL,\r\n  SEARCH_BING_FINISH,\r\n  SET_SEARCH_ENGINE\r\n} from \"../types/results\";\r\nimport { sendQuery } from '../../utils/http';\r\n\r\nexport const search = (query, searchEngine) => async (dispatch) =>{\r\n  dispatch({type: SET_SEARCH_ENGINE, payload: searchEngine})\r\n\r\n  if(searchEngine == 'google' || searchEngine == 'bing') {\r\n    dispatch({type: searchEngine == 'google' ? SEARCH_GOOGLE_START : SEARCH_BING_START});\r\n    try {\r\n      const items = await sendQuery(searchEngine, query);\r\n      dispatch({type: searchEngine == 'google' ? SEARCH_GOOGLE_SUCCESS : SEARCH_BING_SUCCESS, payload: items});\r\n    } catch (error) {\r\n      dispatch({type: searchEngine == 'google' ? SEARCH_GOOGLE_FAIL : SEARCH_BING_FAIL});\r\n    } finally {\r\n      dispatch({type: searchEngine == 'google' ? SEARCH_GOOGLE_FINISH : SEARCH_BING_FINISH});\r\n    }\r\n  }\r\n  else {//if it's both\r\n    dispatch({type: SEARCH_GOOGLE_START});\r\n    dispatch({type: SEARCH_BING_START});\r\n\r\n    try {\r\n      const items = await sendQuery('google', query);\r\n      dispatch({type: SEARCH_GOOGLE_SUCCESS, payload: items});\r\n    } catch (error) {\r\n      dispatch({type: SEARCH_GOOGLE_FAIL});\r\n    } finally {\r\n      dispatch({type: SEARCH_GOOGLE_FINISH});\r\n    }\r\n\r\n    try {\r\n      const items = await sendQuery('bing', query);\r\n      dispatch({type: SEARCH_BING_SUCCESS, payload: items});\r\n    } catch (error) {\r\n      dispatch({type: SEARCH_BING_FAIL});\r\n    } finally {\r\n      dispatch({type: SEARCH_BING_FINISH});\r\n    }\r\n  }\r\n}","import {\r\n  SEARCH_GOOGLE_START,\r\n  SEARCH_GOOGLE_SUCCESS,\r\n  SEARCH_GOOGLE_FAIL,\r\n  SEARCH_GOOGLE_FINISH,\r\n  SEARCH_BING_START,\r\n  SEARCH_BING_SUCCESS,\r\n  SEARCH_BING_FAIL,\r\n  SEARCH_BING_FINISH,\r\n  SET_SEARCH_ENGINE,\r\n} from \"../types/results\";\r\n\r\nconst initialState = {\r\n  resultsGoogle: {\r\n    response: [],\r\n    loading: false,\r\n    error: false\r\n  },\r\n  resultsBing: {\r\n    response: [],\r\n    loading: false,\r\n    error: false\r\n  },\r\n  searchEngine: null,\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_SEARCH_ENGINE:\r\n      return {\r\n        ...state,\r\n        searchEngine: action.payload,\r\n      }\r\n    case SEARCH_GOOGLE_START: \r\n      return {\r\n        ...state,\r\n        resultsGoogle: {\r\n          ...state.resultsGoogle,\r\n          loading: true,\r\n          response: [],\r\n          error: false,\r\n        },\r\n        resultsBing: {\r\n          ...state.resultsBing,\r\n          response: [],\r\n          error: false,\r\n        }\r\n      }\r\n    case SEARCH_GOOGLE_SUCCESS: \r\n      return {\r\n        ...state,\r\n        resultsGoogle: {\r\n          ...state.resultsGoogle,\r\n          response: action.payload\r\n        }\r\n      }\r\n    case SEARCH_GOOGLE_FAIL: \r\n      return {\r\n        ...state,\r\n        resultsGoogle: {\r\n          ...state.resultsGoogle,\r\n          error: true\r\n        }\r\n      }\r\n\r\n    case SEARCH_GOOGLE_FINISH: \r\n      return {\r\n        ...state,\r\n        resultsGoogle: {\r\n          ...state.resultsGoogle,\r\n          loading: false\r\n        }\r\n      }\r\n    \r\n    case SEARCH_BING_START:\r\n      return {\r\n        ...state,\r\n        resultsBing: {\r\n          ...state.resultsBing,\r\n          loading: true,\r\n          response: [],\r\n          error: false,\r\n        },\r\n        resultsGoogle: {\r\n          ...state.resultsGoogle,\r\n          response: [],\r\n          error: false,\r\n        },\r\n      }\r\n    case SEARCH_BING_SUCCESS: \r\n      return {\r\n        ...state,\r\n        resultsBing: {\r\n          ...state.resultsBing,\r\n          response : action.payload\r\n        }\r\n      }\r\n    case SEARCH_BING_FAIL: \r\n      return {\r\n        ...state,\r\n        resultsBing: {\r\n          ...state.resultsBing,\r\n          error: true\r\n        }\r\n      }\r\n\r\n    case SEARCH_BING_FINISH: \r\n      return {\r\n        ...state,\r\n        resultsBing: {\r\n          ...state.resultsBing,\r\n          loading: false\r\n        }\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport results from \"./results\";\r\n\r\nexport default combineReducers({ results });","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport thunk from 'redux-thunk';\r\n\r\nexport default createStore(rootReducer, applyMiddleware(thunk));\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { Provider } from \"react-redux\";\nimport store from './redux/store.js';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}