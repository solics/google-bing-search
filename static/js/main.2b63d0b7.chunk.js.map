{"version":3,"sources":["redux/types/results.js","utils/urls.js","utils/keys.js","utils/http.js","redux/actions/results.js","components/SearchForm/index.js","components/SearchResultItem/index.js","components/SearchResults/index.js","components/App/index.js","redux/reducers/results.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["SEARCH_GOOGLE","SEARCH_BING","SEARCH_ALL","SEARCH_GOOGLE_START","SEARCH_GOOGLE_SUCCESS","SEARCH_GOOGLE_FAIL","SEARCH_GOOGLE_FINISH","SEARCH_BING_START","SEARCH_BING_SUCCESS","SEARCH_BING_FAIL","SEARCH_BING_FINISH","SEARCH_ALL_START","SEARCH_ALL_SUCCESS","SEARCH_ALL_FAIL","SEARCH_ALL_FINISH","SET_SEARCH_ENGINE","CLEAN_RESULTS","URL_GOOGLE_SEARCH","sendQuery","searchEngine","query","a","Promise","resolve","reject","window","fetch","then","response","json","data","items","map","item","snippet","title","displayLink","link","id","cacheId","formattedUrl","catch","error","method","headers","webPages","value","name","displayUrl","url","cleanResults","dispatch","type","TYPES","SearchForm","useState","inpQuery","setInpQuery","selectedSearchEngine","setSelectedSearchEngine","useDispatch","className","onSubmit","e","preventDefault","payload","isGoogle","engine","onChange","target","defaultValue","SearchResultItem","rel","href","SearchResults","props","loading","hasResults","length","emptyResults","App","useSelector","state","results","bingData","resultsBing","googleData","resultsGoogle","isBing","bothSearchEngines","initialState","combineReducers","action","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.2b63d0b7.chunk.js","sourcesContent":["const SEARCH_GOOGLE = 'SEARCH_GOOGLE'\r\nconst SEARCH_BING = 'SEARCH_BING'\r\nconst SEARCH_ALL = 'SEARCH_ALL'\r\n\r\nexport const SEARCH_GOOGLE_START = `${SEARCH_GOOGLE}_START`\r\nexport const SEARCH_GOOGLE_SUCCESS = `${SEARCH_GOOGLE}_SUCCESS`\r\nexport const SEARCH_GOOGLE_FAIL = `${SEARCH_GOOGLE}_FAIL`\r\nexport const SEARCH_GOOGLE_FINISH = `${SEARCH_GOOGLE}_FINISH`\r\n\r\nexport const SEARCH_BING_START = `${SEARCH_BING}_START`\r\nexport const SEARCH_BING_SUCCESS = `${SEARCH_BING}_SUCCESS`\r\nexport const SEARCH_BING_FAIL = `${SEARCH_BING}_FAIL`\r\nexport const SEARCH_BING_FINISH = `${SEARCH_BING}_FINISH`\r\n\r\nexport const SEARCH_ALL_START = `${SEARCH_ALL}_START`\r\nexport const SEARCH_ALL_SUCCESS = `${SEARCH_ALL}_SUCCESS`\r\nexport const SEARCH_ALL_FAIL = `${SEARCH_ALL}_FAIL`\r\nexport const SEARCH_ALL_FINISH = `${SEARCH_ALL}_FINISH`\r\n\r\nexport const SET_SEARCH_ENGINE = 'SET_SEARCH_ENGINE'\r\n\r\nexport const CLEAN_RESULTS = 'CLEAN_RESULTS'\r\n","import { googleKey } from './keys'\r\n\r\nexport const URL_GOOGLE_SEARCH = `https://www.googleapis.com/customsearch/v1?key=${googleKey}&cx=d4e34c3e52055c77a&q=`\r\nexport const URL_BING_SEARCH = 'https://api.bing.microsoft.com/v7.0/search?q='\n","export const googleKey = 'AIzaSyDKGV7naNqKQvkcbpl6-X4NgRO6eC3caQg'\r\nexport const bingKey = 'b89c6a5ac03843fc9f2e6f7727ace7ea'\n","import { URL_GOOGLE_SEARCH, URL_BING_SEARCH } from './urls'\r\nimport { bingKey } from '../utils/keys'\r\n\r\nexport const sendQuery = async (searchEngine, query) => {\r\n  return new Promise((resolve, reject) => {\r\n    if (searchEngine === 'google') {\r\n      try {\r\n        window.fetch(`${URL_GOOGLE_SEARCH}${query}`)\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            let items = []\r\n            if (data.items) {\r\n              items = data.items.map(item => ({\r\n                snippet: item.snippet,\r\n                title: item.title,\r\n                displayLink: item.displayLink,\r\n                link: item.link,\r\n                id: item.cacheId || item.formattedUrl\r\n              }))\r\n            }\r\n            resolve(items)\r\n          })\r\n          .catch(error => reject(error))\r\n      } catch (error) {\r\n        reject(error)\r\n      }\r\n    } else if (searchEngine === 'bing') {\r\n      try {\r\n        window.fetch(`${URL_BING_SEARCH}${query}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Ocp-Apim-Subscription-Key': bingKey\r\n          }\r\n        })\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            let items = []\r\n            if (data.webPages) {\r\n              items = data.webPages.value.map(item => ({\r\n                snippet: item.snippet,\r\n                title: item.name,\r\n                displayLink: item.displayUrl,\r\n                link: item.url,\r\n                id: item.id\r\n              }))\r\n            }\r\n            resolve(items)\r\n          })\r\n          .catch(error => reject(error))\r\n      } catch (error) {\r\n        reject(error)\r\n      }\r\n    }\r\n  })\r\n}\r\n","import * as TYPES from '../types/results'\r\nimport { sendQuery } from '../../utils/http'\r\n\r\nexport const search = (query, searchEngine) => async (dispatch) => {\r\n  dispatch({ type: TYPES.SET_SEARCH_ENGINE, payload: searchEngine })\r\n\r\n  const isGoogle = searchEngine === 'google'\r\n  const allSearchEngines = searchEngine === 'all'\r\n\r\n  if (allSearchEngines) {\r\n    dispatch({ type: TYPES.SEARCH_GOOGLE_START })\r\n    dispatch({ type: TYPES.SEARCH_BING_START })\r\n\r\n    try {\r\n      const items = await sendQuery('google', query)\r\n      dispatch({ type: TYPES.SEARCH_GOOGLE_SUCCESS, payload: items })\r\n    } catch (error) {\r\n      dispatch({ type: TYPES.SEARCH_GOOGLE_FAIL })\r\n    } finally {\r\n      dispatch({ type: TYPES.SEARCH_GOOGLE_FINISH })\r\n    }\r\n\r\n    try {\r\n      const items = await sendQuery('bing', query)\r\n      dispatch({ type: TYPES.SEARCH_BING_SUCCESS, payload: items })\r\n    } catch (error) {\r\n      dispatch({ type: TYPES.SEARCH_BING_FAIL })\r\n    } finally {\r\n      dispatch({ type: TYPES.SEARCH_BING_FINISH })\r\n    }\r\n  } else {\r\n    const engine = isGoogle ? 'GOOGLE' : 'BING'\r\n    dispatch({ type: TYPES[`SEARCH_${engine}_START`] })\r\n    try {\r\n      const items = await sendQuery(searchEngine, query)\r\n      dispatch({ type: TYPES[`SEARCH_${engine}_SUCCESS`], payload: items })\r\n    } catch (error) {\r\n      dispatch({ type: TYPES[`SEARCH_${engine}_FAIL`] })\r\n    } finally {\r\n      dispatch({ type: TYPES[`SEARCH_${engine}_FINISH`] })\r\n    }\r\n  }\r\n}\r\n\r\nexport const cleanResults = () => async (dispatch) => {\r\n  dispatch({ type: TYPES.CLEAN_RESULTS })\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { search, cleanResults } from '../../redux/actions/results'\r\n\r\nexport default function SearchForm () {\r\n  const [inpQuery, setInpQuery] = useState('')\r\n  const [selectedSearchEngine, setSelectedSearchEngine] = useState('all')\r\n  const dispatch = useDispatch()\r\n\r\n  const handleChangeQuery = (e) => {\r\n    setInpQuery(e.target.value)\r\n    if (!e.target.value) dispatch(cleanResults())\r\n  }\r\n  const handleSearchEngine = (e) => {\r\n    setSelectedSearchEngine(e.target.value)\r\n    dispatch(cleanResults())\r\n  }\r\n  const onSubmitSearch = (e) => {\r\n    e.preventDefault()\r\n    if (inpQuery) dispatch(search(inpQuery, selectedSearchEngine))\r\n  }\r\n\r\n  return (\r\n    <div className='search-form'>\r\n      <form onSubmit={onSubmitSearch}>\r\n        <div className='search-form__inputs'>\r\n          <input\r\n            onChange={handleChangeQuery}\r\n            value={inpQuery}\r\n            type='text'\r\n          />\r\n          <select\r\n            defaultValue={selectedSearchEngine}\r\n            onChange={handleSearchEngine}\r\n          >\r\n            <option value='all'>All</option>\r\n            <option value='google'>Google</option>\r\n            <option value='bing'>Bing</option>\r\n          </select>\r\n        </div>\r\n        <div className='search-form__action'>\r\n          <button type='submit'>Search</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function SearchResultItem ({ item }) {\r\n  return (\r\n    <div className='search-results__item'>\r\n      <a target='_blank' rel='noreferrer' href={item.link}>\r\n        <span className='display-link'>{item.displayLink}</span>\r\n        <span className='title-link'>{item.title}</span>\r\n        <p>{item.snippet}</p>\r\n      </a>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport SearchResultItem from '../SearchResultItem'\r\n\r\nexport default function SearchResults (props) {\r\n  const { response, loading, error } = props.data\r\n  const hasResults = !loading && !error && response.length > 0\r\n  const emptyResults = !loading && !error && !response.length\r\n\r\n  return (\r\n    <div className='search-results'>\r\n      <h3 className='search-results__title'>{props.searchEngine} Results</h3>\r\n      <div className='search-results__content'>\r\n        {\r\n          loading &&\r\n            <div>Loading...</div>\r\n        }\r\n        {\r\n          hasResults &&\r\n          response.map(item => <SearchResultItem key={item.id} item={item} />)\r\n        }\r\n        {\r\n          emptyResults &&\r\n            <div>There's no results.</div>\r\n        }\r\n        {\r\n          error &&\r\n            <div>An error have ocurred.</div>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport SearchForm from '../SearchForm'\r\nimport SearchResults from '../SearchResults'\r\nimport '../../styles/styles.scss'\r\n\r\nconst GOOGLE = 'google'\r\nconst BING = 'bing'\r\nconst ALL_ENGINES = 'all'\r\n\r\nexport default function App () {\r\n  const {\r\n    resultsBing: bingData,\r\n    resultsGoogle: googleData,\r\n    searchEngine\r\n  } = useSelector((state) => state.results)\r\n\r\n  const isGoogle = searchEngine === GOOGLE\r\n  const isBing = searchEngine === BING\r\n  const bothSearchEngines = searchEngine === ALL_ENGINES\r\n\r\n  return (\r\n    <div>\r\n      <SearchForm />\r\n      {\r\n        searchEngine &&\r\n        (isGoogle || bothSearchEngines) &&\r\n          <SearchResults searchEngine='Google' data={googleData} />\r\n      }\r\n      {\r\n        searchEngine &&\r\n        (isBing || bothSearchEngines) &&\r\n          <SearchResults searchEngine='Bing' data={bingData} />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","import * as TYPES from '../types/results'\r\n\r\nconst initialState = {\r\n  resultsGoogle: {\r\n    response: [],\r\n    loading: false,\r\n    error: false\r\n  },\r\n  resultsBing: {\r\n    response: [],\r\n    loading: false,\r\n    error: false\r\n  },\r\n  searchEngine: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case TYPES.SET_SEARCH_ENGINE:\r\n      return {\r\n        ...state,\r\n        searchEngine: action.payload\r\n      }\r\n    case TYPES.SEARCH_GOOGLE_START:\r\n      return {\r\n        ...state,\r\n        resultsGoogle: {\r\n          ...state.resultsGoogle,\r\n          loading: true,\r\n          response: [],\r\n          error: false\r\n        },\r\n        resultsBing: {\r\n          ...state.resultsBing,\r\n          response: [],\r\n          error: false\r\n        }\r\n      }\r\n    case TYPES.SEARCH_GOOGLE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        resultsGoogle: {\r\n          ...state.resultsGoogle,\r\n          response: action.payload\r\n        }\r\n      }\r\n    case TYPES.SEARCH_GOOGLE_FAIL:\r\n      return {\r\n        ...state,\r\n        resultsGoogle: {\r\n          ...state.resultsGoogle,\r\n          error: true\r\n        }\r\n      }\r\n\r\n    case TYPES.SEARCH_GOOGLE_FINISH:\r\n      return {\r\n        ...state,\r\n        resultsGoogle: {\r\n          ...state.resultsGoogle,\r\n          loading: false\r\n        }\r\n      }\r\n\r\n    case TYPES.SEARCH_BING_START:\r\n      return {\r\n        ...state,\r\n        resultsBing: {\r\n          ...state.resultsBing,\r\n          loading: true,\r\n          response: [],\r\n          error: false\r\n        },\r\n        resultsGoogle: {\r\n          ...state.resultsGoogle,\r\n          response: [],\r\n          error: false\r\n        }\r\n      }\r\n    case TYPES.SEARCH_BING_SUCCESS:\r\n      return {\r\n        ...state,\r\n        resultsBing: {\r\n          ...state.resultsBing,\r\n          response: action.payload\r\n        }\r\n      }\r\n    case TYPES.SEARCH_BING_FAIL:\r\n      return {\r\n        ...state,\r\n        resultsBing: {\r\n          ...state.resultsBing,\r\n          error: true\r\n        }\r\n      }\r\n\r\n    case TYPES.SEARCH_BING_FINISH:\r\n      return {\r\n        ...state,\r\n        resultsBing: {\r\n          ...state.resultsBing,\r\n          loading: false\r\n        }\r\n      }\r\n    case TYPES.CLEAN_RESULTS:\r\n      return {\r\n        ...initialState\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport results from './results'\r\n\r\nexport default combineReducers({ results })\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport rootReducer from './reducers'\r\nimport thunk from 'redux-thunk'\r\n\r\nexport default createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport { Provider } from 'react-redux'\nimport store from './redux/store.js'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}