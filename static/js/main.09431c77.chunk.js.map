{"version":3,"sources":["redux/types/results.js","utils/urls.js","utils/keys.js","utils/http.js","redux/actions/results.js","components/SearchForm/index.js","components/SearchResultItem/index.js","components/SearchResults/index.js","components/App/index.js","redux/reducers/results.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["SEARCH_GOOGLE","SEARCH_BING","SEARCH_ALL","SEARCH_GOOGLE_START","SEARCH_GOOGLE_SUCCESS","SEARCH_GOOGLE_FAIL","SEARCH_GOOGLE_FINISH","SEARCH_BING_START","SEARCH_BING_SUCCESS","SEARCH_BING_FAIL","SEARCH_BING_FINISH","SET_SEARCH_ENGINE","CLEAN_RESULTS","URL_GOOGLE_SEARCH","sendQuery","searchEngine","query","a","Promise","resolve","reject","window","fetch","then","response","json","data","items","map","item","snippet","title","displayLink","link","id","cacheId","catch","error","method","headers","webPages","value","name","displayUrl","url","cleanResults","dispatch","type","TYPES","SearchForm","useState","inpQuery","setInpQuery","selectedSearchEngine","setSelectedSearchEngine","useDispatch","className","onSubmit","e","preventDefault","payload","onChange","target","defaultValue","SearchResultItem","rel","href","SearchResults","props","loading","length","App","bingData","useSelector","state","results","resultsBing","googleData","resultsGoogle","initialState","combineReducers","action","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"qNAAMA,EAAgB,gBAChBC,EAAc,cACdC,EAAa,aAENC,EAAmB,UAAMH,EAAN,UACnBI,EAAqB,UAAMJ,EAAN,YACrBK,EAAkB,UAAML,EAAN,SAClBM,EAAoB,UAAMN,EAAN,WAEpBO,EAAiB,UAAMN,EAAN,UACjBO,EAAmB,UAAMP,EAAN,YACnBQ,EAAgB,UAAMR,EAAN,SAChBS,EAAkB,UAAMT,EAAN,WAOlBU,GALgB,UAAMT,EAAN,UACE,UAAMA,EAAN,YACH,UAAMA,EAAN,SACE,UAAMA,EAAN,WAEG,qBAEpBU,EAAgB,gBCnBhBC,EAAiB,yDCFL,0CDEK,4BECjBC,EAAS,uCAAG,WAAOC,EAAcC,GAArB,SAAAC,EAAA,+EAChB,IAAIC,SAAQ,SAACC,EAASC,GAC3B,GAAqB,WAAjBL,EACF,IACEM,OAAOC,MAAP,UAAgBT,GAAhB,OAAoCG,IACjCO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,IAAIC,EAAQ,GACRD,EAAKC,QACPA,EAAQD,EAAKC,MAAMC,KAAI,SAAAC,GAAI,MAAK,CAC9BC,QAASD,EAAKC,QACdC,MAAOF,EAAKE,MACZC,YAAaH,EAAKG,YAClBC,KAAMJ,EAAKI,KACXC,GAAIL,EAAKM,aAGbhB,EAAQQ,MAETS,OAAM,SAAAC,GAAK,OAAIjB,EAAOiB,MACzB,MAAOA,GACPjB,EAAOiB,QAEJ,GAAqB,SAAjBtB,EACT,IACEM,OAAOC,MAAP,UFzBuB,iDEyBvB,OAAkCN,GAAS,CACzCsB,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,4BD/BW,sCCkCZhB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,IAAIC,EAAQ,GACRD,EAAKc,WACPb,EAAQD,EAAKc,SAASC,MAAMb,KAAI,SAAAC,GAAI,MAAK,CACvCC,QAASD,EAAKC,QACdC,MAAOF,EAAKa,KACZV,YAAaH,EAAKc,WAClBV,KAAMJ,EAAKe,IACXV,GAAIL,EAAKK,QAGbf,EAAQQ,MAETS,OAAM,SAAAC,GAAK,OAAIjB,EAAOiB,MACzB,MAAOA,GACPjB,EAAOiB,QAhDU,2CAAH,wDCqCTQ,EAAe,yDAAM,WAAOC,GAAP,SAAA7B,EAAA,sDAChC6B,EAAS,CAAEC,KAAMC,IADe,2CAAN,uDCObC,EA3CI,WAAO,IAAD,EACSC,mBAAS,IADlB,mBAChBC,EADgB,KACNC,EADM,OAEiCF,mBAAS,OAF1C,mBAEhBG,EAFgB,KAEMC,EAFN,KAGjBR,EAAWS,cAejB,OACE,qBAAKC,UAAU,cAAf,SACE,uBAAMC,SAPa,SAACC,GDdJ,IAAC1C,EAAOD,ECe1B2C,EAAEC,iBACER,GAAUL,GDhBK9B,ECgBWmC,EDhBJpC,ECgBcsC,EDhBtB,uCAAyB,WAAOP,GAAP,mBAAA7B,EAAA,yDAC7C6B,EAAS,CAAEC,KAAMC,EAAyBY,QAAS7C,IAE9B,WAAjBA,GAA8C,SAAjBA,EAHY,wBAI3C+B,EAAS,CAAEC,KAAuB,WAAjBhC,EAA4BiC,EAA4BA,IAJ9B,kBAMrBlC,EAAUC,EAAcC,GANH,OAMnCW,EANmC,OAOzCmB,EAAS,CAAEC,KAAuB,WAAjBhC,EAA4BiC,EAA8BA,EAA2BY,QAASjC,IAPtE,kDASzCmB,EAAS,CAAEC,KAAuB,WAAjBhC,EAA4BiC,EAA2BA,IAT/B,yBAWzCF,EAAS,CAAEC,KAAuB,WAAjBhC,EAA4BiC,EAA6BA,IAXjC,oDAc3CF,EAAS,CAAEC,KAAMC,IACjBF,EAAS,CAAEC,KAAMC,IAf0B,oBAkBrBlC,EAAU,SAAUE,GAlBC,QAkBnCW,EAlBmC,OAmBzCmB,EAAS,CAAEC,KAAMC,EAA6BY,QAASjC,IAnBd,mDAqBzCmB,EAAS,CAAEC,KAAMC,IArBwB,yBAuBzCF,EAAS,CAAEC,KAAMC,IAvBwB,gDA2BrBlC,EAAU,OAAQE,GA3BG,QA2BnCW,EA3BmC,OA4BzCmB,EAAS,CAAEC,KAAMC,EAA2BY,QAASjC,IA5BZ,mDA8BzCmB,EAAS,CAAEC,KAAMC,IA9BwB,yBAgCzCF,EAAS,CAAEC,KAAMC,IAhCwB,yGAAzB,yDCqBhB,UACE,sBAAKQ,UAAU,sBAAf,UACE,uBACEK,SAlBgB,SAACH,GACzBN,EAAYM,EAAEI,OAAOrB,OAChBiB,EAAEI,OAAOrB,OAAOK,EAASD,MAiBtBJ,MAAOU,EACPJ,KAAK,SAEP,yBACEgB,aAAcV,EACdQ,SApBiB,SAACH,GAC1BJ,EAAwBI,EAAEI,OAAOrB,OACjCK,EAASD,MAgBH,UAIE,wBAAQJ,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,wBAGJ,qBAAKe,UAAU,sBAAf,SACE,wBAAQT,KAAK,SAAb,4BC5BKiB,EAXU,SAAC,GAAc,IAAZnC,EAAW,EAAXA,KAC1B,OACE,qBAAK2B,UAAU,uBAAf,SACE,oBAAGM,OAAO,SAASG,IAAI,aAAaC,KAAMrC,EAAKI,KAA/C,UACE,sBAAMuB,UAAU,eAAhB,SAAgC3B,EAAKG,cACrC,sBAAMwB,UAAU,aAAhB,SAA8B3B,EAAKE,QACnC,4BAAIF,EAAKC,gBCqBFqC,EA1BO,SAACC,GAAW,IAAD,EACMA,EAAM1C,KAAnCF,EADuB,EACvBA,SAAU6C,EADa,EACbA,QAAShC,EADI,EACJA,MAC3B,OACE,sBAAKmB,UAAU,iBAAf,UACE,qBAAIA,UAAU,wBAAd,UAAuCY,EAAMrD,aAA7C,cACA,sBAAKyC,UAAU,0BAAf,UAEIa,GACE,8CAGDA,IAAYhC,GAASb,EAAS8C,OAAS,GACxC9C,EAASI,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAqCA,KAAMA,GAApBA,EAAKM,aAGhDkC,IAAYhC,GAA6B,IAApBb,EAAS8C,QAC7B,sDAGFjC,GACE,gECKGkC,G,MArBH,WACV,IAAMC,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAAQC,eAChDC,EAAaJ,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAAQG,iBAClD/D,EAAe0D,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAAQ5D,gBAE1D,OACE,gCACE,cAAC,EAAD,IAEEA,IACkB,WAAjBA,GAA8C,QAAjBA,IAC5B,cAAC,EAAD,CAAeA,aAAa,SAASW,KAAMmD,IAG7C9D,IACkB,SAAjBA,GAA4C,QAAjBA,IAC1B,cAAC,EAAD,CAAeA,aAAa,OAAOW,KAAM8C,S,cCrB7CO,EAAe,CACnBD,cAAe,CACbtD,SAAU,GACV6C,SAAS,EACThC,OAAO,GAETuC,YAAa,CACXpD,SAAU,GACV6C,SAAS,EACThC,OAAO,GAETtB,aAAc,MCVDiE,cAAgB,CAAEL,QDalB,WAAyC,IAA/BD,EAA8B,uDAAtBK,EAAcE,EAAQ,uCACrD,OAAQA,EAAOlC,MACb,KAAKC,EACH,OAAO,2BACF0B,GADL,IAEE3D,aAAckE,EAAOrB,UAEzB,KAAKZ,EACH,OAAO,2BACF0B,GADL,IAEEI,cAAc,2BACTJ,EAAMI,eADE,IAEXT,SAAS,EACT7C,SAAU,GACVa,OAAO,IAETuC,YAAY,2BACPF,EAAME,aADA,IAETpD,SAAU,GACVa,OAAO,MAGb,KAAKW,EACH,OAAO,2BACF0B,GADL,IAEEI,cAAc,2BACTJ,EAAMI,eADE,IAEXtD,SAAUyD,EAAOrB,YAGvB,KAAKZ,EACH,OAAO,2BACF0B,GADL,IAEEI,cAAc,2BACTJ,EAAMI,eADE,IAEXzC,OAAO,MAIb,KAAKW,EACH,OAAO,2BACF0B,GADL,IAEEI,cAAc,2BACTJ,EAAMI,eADE,IAEXT,SAAS,MAIf,KAAKrB,EACH,OAAO,2BACF0B,GADL,IAEEE,YAAY,2BACPF,EAAME,aADA,IAETP,SAAS,EACT7C,SAAU,GACVa,OAAO,IAETyC,cAAc,2BACTJ,EAAMI,eADE,IAEXtD,SAAU,GACVa,OAAO,MAGb,KAAKW,EACH,OAAO,2BACF0B,GADL,IAEEE,YAAY,2BACPF,EAAME,aADA,IAETpD,SAAUyD,EAAOrB,YAGvB,KAAKZ,EACH,OAAO,2BACF0B,GADL,IAEEE,YAAY,2BACPF,EAAME,aADA,IAETvC,OAAO,MAIb,KAAKW,EACH,OAAO,2BACF0B,GADL,IAEEE,YAAY,2BACPF,EAAME,aADA,IAETP,SAAS,MAGf,KAAKrB,EACH,OAAO,eACF+B,GAEP,QACE,OAAOL,M,QEzGEQ,cAAYC,EAAaC,YAAgBC,MCExDC,IAASC,OACP,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.09431c77.chunk.js","sourcesContent":["const SEARCH_GOOGLE = 'SEARCH_GOOGLE'\r\nconst SEARCH_BING = 'SEARCH_BING'\r\nconst SEARCH_ALL = 'SEARCH_ALL'\r\n\r\nexport const SEARCH_GOOGLE_START = `${SEARCH_GOOGLE}_START`\r\nexport const SEARCH_GOOGLE_SUCCESS = `${SEARCH_GOOGLE}_SUCCESS`\r\nexport const SEARCH_GOOGLE_FAIL = `${SEARCH_GOOGLE}_FAIL`\r\nexport const SEARCH_GOOGLE_FINISH = `${SEARCH_GOOGLE}_FINISH`\r\n\r\nexport const SEARCH_BING_START = `${SEARCH_BING}_START`\r\nexport const SEARCH_BING_SUCCESS = `${SEARCH_BING}_SUCCESS`\r\nexport const SEARCH_BING_FAIL = `${SEARCH_BING}_FAIL`\r\nexport const SEARCH_BING_FINISH = `${SEARCH_BING}_FINISH`\r\n\r\nexport const SEARCH_ALL_START = `${SEARCH_ALL}_START`\r\nexport const SEARCH_ALL_SUCCESS = `${SEARCH_ALL}_SUCCESS`\r\nexport const SEARCH_ALL_FAIL = `${SEARCH_ALL}_FAIL`\r\nexport const SEARCH_ALL_FINISH = `${SEARCH_ALL}_FINISH`\r\n\r\nexport const SET_SEARCH_ENGINE = 'SET_SEARCH_ENGINE'\r\n\r\nexport const CLEAN_RESULTS = 'CLEAN_RESULTS'\r\n","import { googleKey } from './keys'\r\n\r\nexport const URL_GOOGLE_SEARCH = `https://www.googleapis.com/customsearch/v1?key=${googleKey}&cx=d4e34c3e52055c77a&q=`\r\nexport const URL_BING_SEARCH = 'https://api.bing.microsoft.com/v7.0/search?q='\n","export const googleKey = 'AIzaSyDKGV7naNqKQvkcbpl6-X4NgRO6eC3caQg'\r\nexport const bingKey = 'b89c6a5ac03843fc9f2e6f7727ace7ea'\n","import { URL_GOOGLE_SEARCH, URL_BING_SEARCH } from './urls'\r\nimport { bingKey } from '../utils/keys'\r\n\r\nexport const sendQuery = async (searchEngine, query) => {\r\n  return new Promise((resolve, reject) => {\r\n    if (searchEngine === 'google') {\r\n      try {\r\n        window.fetch(`${URL_GOOGLE_SEARCH}${query}`)\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            let items = []\r\n            if (data.items) {\r\n              items = data.items.map(item => ({\r\n                snippet: item.snippet,\r\n                title: item.title,\r\n                displayLink: item.displayLink,\r\n                link: item.link,\r\n                id: item.cacheId\r\n              }))\r\n            }\r\n            resolve(items)\r\n          })\r\n          .catch(error => reject(error))\r\n      } catch (error) {\r\n        reject(error)\r\n      }\r\n    } else if (searchEngine === 'bing') {\r\n      try {\r\n        window.fetch(`${URL_BING_SEARCH}${query}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Ocp-Apim-Subscription-Key': bingKey\r\n          }\r\n        })\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            let items = []\r\n            if (data.webPages) {\r\n              items = data.webPages.value.map(item => ({\r\n                snippet: item.snippet,\r\n                title: item.name,\r\n                displayLink: item.displayUrl,\r\n                link: item.url,\r\n                id: item.id\r\n              }))\r\n            }\r\n            resolve(items)\r\n          })\r\n          .catch(error => reject(error))\r\n      } catch (error) {\r\n        reject(error)\r\n      }\r\n    }\r\n  })\r\n}\r\n","import * as TYPES from '../types/results'\r\nimport { sendQuery } from '../../utils/http'\r\n\r\nexport const search = (query, searchEngine) => async (dispatch) => {\r\n  dispatch({ type: TYPES.SET_SEARCH_ENGINE, payload: searchEngine })\r\n\r\n  if (searchEngine === 'google' || searchEngine === 'bing') {\r\n    dispatch({ type: searchEngine === 'google' ? TYPES.SEARCH_GOOGLE_START : TYPES.SEARCH_BING_START })\r\n    try {\r\n      const items = await sendQuery(searchEngine, query)\r\n      dispatch({ type: searchEngine === 'google' ? TYPES.SEARCH_GOOGLE_SUCCESS : TYPES.SEARCH_BING_SUCCESS, payload: items })\r\n    } catch (error) {\r\n      dispatch({ type: searchEngine === 'google' ? TYPES.SEARCH_GOOGLE_FAIL : TYPES.SEARCH_BING_FAIL })\r\n    } finally {\r\n      dispatch({ type: searchEngine === 'google' ? TYPES.SEARCH_GOOGLE_FINISH : TYPES.SEARCH_BING_FINISH })\r\n    }\r\n  } else { // if it's both\r\n    dispatch({ type: TYPES.SEARCH_GOOGLE_START })\r\n    dispatch({ type: TYPES.SEARCH_BING_START })\r\n\r\n    try {\r\n      const items = await sendQuery('google', query)\r\n      dispatch({ type: TYPES.SEARCH_GOOGLE_SUCCESS, payload: items })\r\n    } catch (error) {\r\n      dispatch({ type: TYPES.SEARCH_GOOGLE_FAIL })\r\n    } finally {\r\n      dispatch({ type: TYPES.SEARCH_GOOGLE_FINISH })\r\n    }\r\n\r\n    try {\r\n      const items = await sendQuery('bing', query)\r\n      dispatch({ type: TYPES.SEARCH_BING_SUCCESS, payload: items })\r\n    } catch (error) {\r\n      dispatch({ type: TYPES.SEARCH_BING_FAIL })\r\n    } finally {\r\n      dispatch({ type: TYPES.SEARCH_BING_FINISH })\r\n    }\r\n  }\r\n}\r\n\r\nexport const cleanResults = () => async (dispatch) => {\r\n  dispatch({ type: TYPES.CLEAN_RESULTS })\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { search, cleanResults } from '../../redux/actions/results'\r\n\r\nconst SearchForm = () => {\r\n  const [inpQuery, setInpQuery] = useState('')\r\n  const [selectedSearchEngine, setSelectedSearchEngine] = useState('all')\r\n  const dispatch = useDispatch()\r\n\r\n  const handleChangeQuery = (e) => {\r\n    setInpQuery(e.target.value)\r\n    if (!e.target.value) dispatch(cleanResults())\r\n  }\r\n  const handleSearchEngine = (e) => {\r\n    setSelectedSearchEngine(e.target.value)\r\n    dispatch(cleanResults())\r\n  }\r\n  const onSubmitSearch = (e) => {\r\n    e.preventDefault()\r\n    if (inpQuery) dispatch(search(inpQuery, selectedSearchEngine))\r\n  }\r\n\r\n  return (\r\n    <div className='search-form'>\r\n      <form onSubmit={onSubmitSearch}>\r\n        <div className='search-form__inputs'>\r\n          <input\r\n            onChange={handleChangeQuery}\r\n            value={inpQuery}\r\n            type='text'\r\n          />\r\n          <select\r\n            defaultValue={selectedSearchEngine}\r\n            onChange={handleSearchEngine}\r\n          >\r\n            <option value='all'>All</option>\r\n            <option value='google'>Google</option>\r\n            <option value='bing'>Bing</option>\r\n          </select>\r\n        </div>\r\n        <div className='search-form__action'>\r\n          <button type='submit'>Search</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\nexport default SearchForm\r\n","import React from 'react'\r\n\r\nconst SearchResultItem = ({ item }) => {\r\n  return (\r\n    <div className='search-results__item'>\r\n      <a target='_blank' rel='noreferrer' href={item.link}>\r\n        <span className='display-link'>{item.displayLink}</span>\r\n        <span className='title-link'>{item.title}</span>\r\n        <p>{item.snippet}</p>\r\n      </a>\r\n    </div>\r\n  )\r\n}\r\nexport default SearchResultItem\r\n","import React from 'react'\r\nimport SearchResultItem from '../SearchResultItem'\r\n\r\nconst SearchResults = (props) => {\r\n  const { response, loading, error } = props.data\r\n  return (\r\n    <div className='search-results'>\r\n      <h3 className='search-results__title'>{props.searchEngine} Results</h3>\r\n      <div className='search-results__content'>\r\n        {\r\n          loading &&\r\n            <div>Loading...</div>\r\n        }\r\n        {\r\n          !loading && !error && response.length > 0 &&\r\n          response.map(item => <SearchResultItem key={item.cacheId} item={item} />)\r\n        }\r\n        {\r\n          !loading && !error && response.length === 0 &&\r\n            <div>There's no results.</div>\r\n        }\r\n        {\r\n          error &&\r\n            <div>An error have ocurred.</div>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default SearchResults\r\n","import React from 'react'\r\nimport SearchForm from '../SearchForm'\r\nimport SearchResults from '../SearchResults'\r\nimport '../../styles/styles.scss'\r\n\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst App = () => {\r\n  const bingData = useSelector((state) => state.results.resultsBing)\r\n  const googleData = useSelector((state) => state.results.resultsGoogle)\r\n  const searchEngine = useSelector((state) => state.results.searchEngine)\r\n\r\n  return (\r\n    <div>\r\n      <SearchForm />\r\n      {\r\n        searchEngine &&\r\n        (searchEngine === 'google' || searchEngine === 'all') &&\r\n          <SearchResults searchEngine='Google' data={googleData} />\r\n      }\r\n      {\r\n        searchEngine &&\r\n        (searchEngine === 'bing' || searchEngine === 'all') &&\r\n          <SearchResults searchEngine='Bing' data={bingData} />\r\n      }\r\n    </div>\r\n  )\r\n}\r\nexport default App\r\n","import * as TYPES from '../types/results'\r\n\r\nconst initialState = {\r\n  resultsGoogle: {\r\n    response: [],\r\n    loading: false,\r\n    error: false\r\n  },\r\n  resultsBing: {\r\n    response: [],\r\n    loading: false,\r\n    error: false\r\n  },\r\n  searchEngine: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case TYPES.SET_SEARCH_ENGINE:\r\n      return {\r\n        ...state,\r\n        searchEngine: action.payload\r\n      }\r\n    case TYPES.SEARCH_GOOGLE_START:\r\n      return {\r\n        ...state,\r\n        resultsGoogle: {\r\n          ...state.resultsGoogle,\r\n          loading: true,\r\n          response: [],\r\n          error: false\r\n        },\r\n        resultsBing: {\r\n          ...state.resultsBing,\r\n          response: [],\r\n          error: false\r\n        }\r\n      }\r\n    case TYPES.SEARCH_GOOGLE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        resultsGoogle: {\r\n          ...state.resultsGoogle,\r\n          response: action.payload\r\n        }\r\n      }\r\n    case TYPES.SEARCH_GOOGLE_FAIL:\r\n      return {\r\n        ...state,\r\n        resultsGoogle: {\r\n          ...state.resultsGoogle,\r\n          error: true\r\n        }\r\n      }\r\n\r\n    case TYPES.SEARCH_GOOGLE_FINISH:\r\n      return {\r\n        ...state,\r\n        resultsGoogle: {\r\n          ...state.resultsGoogle,\r\n          loading: false\r\n        }\r\n      }\r\n\r\n    case TYPES.SEARCH_BING_START:\r\n      return {\r\n        ...state,\r\n        resultsBing: {\r\n          ...state.resultsBing,\r\n          loading: true,\r\n          response: [],\r\n          error: false\r\n        },\r\n        resultsGoogle: {\r\n          ...state.resultsGoogle,\r\n          response: [],\r\n          error: false\r\n        }\r\n      }\r\n    case TYPES.SEARCH_BING_SUCCESS:\r\n      return {\r\n        ...state,\r\n        resultsBing: {\r\n          ...state.resultsBing,\r\n          response: action.payload\r\n        }\r\n      }\r\n    case TYPES.SEARCH_BING_FAIL:\r\n      return {\r\n        ...state,\r\n        resultsBing: {\r\n          ...state.resultsBing,\r\n          error: true\r\n        }\r\n      }\r\n\r\n    case TYPES.SEARCH_BING_FINISH:\r\n      return {\r\n        ...state,\r\n        resultsBing: {\r\n          ...state.resultsBing,\r\n          loading: false\r\n        }\r\n      }\r\n    case TYPES.CLEAN_RESULTS:\r\n      return {\r\n        ...initialState\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport results from './results'\r\n\r\nexport default combineReducers({ results })\n","import { createStore, applyMiddleware } from 'redux'\r\nimport rootReducer from './reducers'\r\nimport thunk from 'redux-thunk'\r\n\r\nexport default createStore(rootReducer, applyMiddleware(thunk))\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport { Provider } from 'react-redux'\nimport store from './redux/store.js'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}